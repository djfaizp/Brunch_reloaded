diff -ruN a/drivers/gpu/drm/udl/udl_connector.c b/drivers/gpu/drm/udl/udl_connector.c
--- a/drivers/gpu/drm/udl/udl_connector.c	2021-04-08 07:56:57.613150577 +0200
+++ b/drivers/gpu/drm/udl/udl_connector.c	2021-03-14 08:27:51.000000000 +0100
@@ -98,13 +98,6 @@
 	return connector_status_connected;
 }
 
-static struct drm_encoder*
-udl_best_single_encoder(struct drm_connector *connector)
-{
-	int enc_id = connector->encoder_ids[0];
-	return drm_encoder_find(connector->dev, NULL, enc_id);
-}
-
 static int udl_connector_set_property(struct drm_connector *connector,
 				      struct drm_property *property,
 				      uint64_t val)
@@ -128,7 +121,6 @@
 static const struct drm_connector_helper_funcs udl_connector_helper_funcs = {
 	.get_modes = udl_get_modes,
 	.mode_valid = udl_mode_valid,
-	.best_encoder = udl_best_single_encoder,
 };
 
 static const struct drm_connector_funcs udl_connector_funcs = {
diff -ruN a/drivers/gpu/drm/udl/udl_fb.c b/drivers/gpu/drm/udl/udl_fb.c
--- a/drivers/gpu/drm/udl/udl_fb.c	2021-04-08 07:56:57.613150577 +0200
+++ b/drivers/gpu/drm/udl/udl_fb.c	2021-03-14 08:27:51.000000000 +0100
@@ -244,6 +244,7 @@
 	return 0;
 }
 
+static struct fb_ops udlfb_ops;
 
 /*
  * Assumes caller is holding info->lock mutex (for open and release at least)
@@ -259,7 +260,7 @@
 		fb_deferred_io_cleanup(info);
 		kfree(info->fbdefio);
 		info->fbdefio = NULL;
-		info->fbops->fb_mmap = udl_fb_mmap;
+		udlfb_ops.fb_mmap = udl_fb_mmap;
 	}
 #endif
 
@@ -326,7 +327,7 @@
 	struct udl_framebuffer *ufb = to_udl_fb(fb);
 
 	if (ufb->obj)
-		drm_gem_object_put_unlocked(&ufb->obj->base);
+		drm_gem_object_put(&ufb->obj->base);
 
 	drm_framebuffer_cleanup(fb);
 	kfree(ufb);
@@ -416,7 +417,7 @@
 
 	return ret;
 out_gfree:
-	drm_gem_object_put_unlocked(&ufbdev->ufb.obj->base);
+	drm_gem_object_put(&ufbdev->ufb.obj->base);
 out:
 	return ret;
 }
@@ -433,7 +434,7 @@
 	if (ufbdev->ufb.obj) {
 		drm_framebuffer_unregister_private(&ufbdev->ufb.base);
 		drm_framebuffer_cleanup(&ufbdev->ufb.base);
-		drm_gem_object_put_unlocked(&ufbdev->ufb.obj->base);
+		drm_gem_object_put(&ufbdev->ufb.obj->base);
 	}
 }
 
@@ -452,10 +453,6 @@
 	if (ret)
 		goto free;
 
-	ret = drm_fb_helper_single_add_all_connectors(&ufbdev->helper);
-	if (ret)
-		goto fini;
-
 	/* disable all the possible outputs/crtcs before entering KMS mode */
 	drm_helper_disable_unused_functions(dev);
 
diff -ruN a/drivers/gpu/drm/udl/udl_gem.c b/drivers/gpu/drm/udl/udl_gem.c
--- a/drivers/gpu/drm/udl/udl_gem.c	2021-04-08 07:56:57.613150577 +0200
+++ b/drivers/gpu/drm/udl/udl_gem.c	2021-03-14 08:27:51.000000000 +0100
@@ -52,7 +52,7 @@
 		return ret;
 	}
 
-	drm_gem_object_put_unlocked(&obj->base);
+	drm_gem_object_put(&obj->base);
 	*handle_p = handle;
 	return 0;
 }
@@ -227,7 +227,7 @@
 	*offset = drm_vma_node_offset_addr(&gobj->base.vma_node);
 
 out:
-	drm_gem_object_put_unlocked(&gobj->base);
+	drm_gem_object_put(&gobj->base);
 unlock:
 	mutex_unlock(&udl->gem_lock);
 	return ret;
